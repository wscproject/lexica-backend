/* eslint-disable no-unused-expressions */
/* eslint-disable max-len */
require('dotenv').config;
const uuid = require('uuid').v4;
const languages = [
  {
    id: uuid(),
    external_id: 'Q9240',
    code: 'id',
    title: 'Bahasa Indonesia',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q1860',
    code: 'en',
    title: 'English',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9237',
    code: 'ms',
    title: 'Bahasa Melayu',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q13324',
    code: 'min',
    title: 'Minangkabau',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q33151',
    code: 'bjn',
    title: 'Banjar',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q33549',
    code: 'jv',
    title: 'Jawa',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q188',
    code: 'de',
    title: 'Deutsch',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q34002',
    code: 'su',
    title: 'Sunda',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q32238',
    code: 'dag',
    title: 'Dagbanli',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q1321',
    code: 'es',
    title: 'Español',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q33070',
    code: 'ban',
    title: 'Basa Bali',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q7737',
    code: 'ru',
    title: 'Русский',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q33578',
    code: 'ig',
    title: 'Igbo',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q36213',
    code: 'mad',
    title: 'Madhurâ',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q5317225',
    code: 'dtp',
    title: 'Kadazandusun',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q7411',
    code: 'nl',
    title: 'Nederlands',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q5146',
    code: 'pt',
    title: 'Português',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q56475',
    code: 'ha',
    title: 'Hausa',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q33284',
    code: 'bcl',
    title: 'Bikol Central',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q8798',
    code: 'uk',
    title: 'Українська',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q150',
    code: 'fr',
    title: 'Français',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9078',
    code: 'lv',
    title: 'Latviešu',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q6654',
    code: 'hr',
    title: 'Hrvatski',
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q13955',
    code: 'ar',
    title: 'العربية',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9168',
    code: 'fa',
    title: 'فارسی',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q8641',
    code: 'yi',
    title: 'ייִדיש',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9288',
    code: 'he',
    title: 'עברית',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q5287',
    code: 'ja',
    title: '日本語',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9176',
    code: 'ko',
    title: '한국어',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9217',
    code: 'th',
    title: 'ไทย',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q9199',
    code: 'vi',
    title: 'Tiếng Việt',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q34057',
    code: 'tl',
    title: 'Tagalog',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q7838',
    code: 'sw',
    title: 'Kiswahili',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q34311',
    code: 'yo',
    title: 'Yorùbá',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
  {
    id: uuid(),
    external_id: 'Q13275',
    code: 'so',
    title: 'Soomaaliga',
    is_rtl: true,
    created_at: new Date(),
    updated_at: new Date(),
  },
];

module.exports = {
  up: async (queryInterface) => {
    for (const language of languages) {
      const exists = await queryInterface.rawSelect('languages', {
        where: {
          external_id: language.external_id,
        },
      }, ['id']);

      if (!exists) {
        await queryInterface.bulkInsert('languages', [language]);
      }
    }
  },

  down: async (queryInterface, Sequelize) => {
    // Remove inserted data
    await queryInterface.bulkDelete('languages', null, {});
  },
};
